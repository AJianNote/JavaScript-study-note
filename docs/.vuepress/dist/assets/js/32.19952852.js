(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{377:function(t,s,n){"use strict";n.r(s);var a=n(42),o=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"原型链"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),n("h2",{attrs:{id:"显示原型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#显示原型"}},[t._v("#")]),t._v(" 显示原型")]),t._v(" "),n("p",[t._v("每一个函数"),n("code",[t._v("function")]),t._v("都会有一个"),n("code",[t._v("prototype")]),t._v(",即"),n("code",[t._v("显示原型属性")]),t._v(";默认指向一个空的"),n("code",[t._v("Object")]),t._v("对象(但是Object对象除外)")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("在默认情况下,函数的原型对象会自动获得"),n("code",[t._v("constructor")]),t._v("属性,这个属性指向原型对象,即")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fun1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Fun1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Fun1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),n("h2",{attrs:{id:"隐式原型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#隐式原型"}},[t._v("#")]),t._v(" 隐式原型")]),t._v(" "),n("p",[t._v("每一个实例对象都有一个"),n("code",[t._v("__proto__")]),t._v(",称之为"),n("code",[t._v("隐式原型属性")])]),t._v(" "),n("p",[t._v("对象隐式原型的值为其对应构造函数的显示原型的值")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("每一个函数不仅拥有显示原型属性,也拥有一个隐式原型属性"),n("code",[t._v("__proto__")]),t._v("(function是Function的实例),所以说所有函数的"),n("code",[t._v("__proto__")]),t._v("都是相等的")]),t._v(" "),n("p",[t._v("对于"),n("code",[t._v("Object")]),t._v("来说,"),n("code",[t._v("Object")]),t._v("也是"),n("code",[t._v("Function")]),t._v("的实例,所以Object对象也有隐式原型属性,"),n("code",[t._v("Object")]),t._v("的隐式原型属性指向"),n("code",[t._v("Function.prototype")])]),t._v(" "),n("p",[t._v("对于"),n("code",[t._v("Function")]),t._v("来说,"),n("code",[t._v("Function")]),t._v("是"),n("code",[t._v("Function")]),t._v("的实例对象,即自身的实例对象"),n("code",[t._v("Function = new Function")]),t._v(","),n("code",[t._v("Function")]),t._v("的显示原型和隐是原型是相等的")])])])}),[],!1,null,null,null);s.default=o.exports}}]);